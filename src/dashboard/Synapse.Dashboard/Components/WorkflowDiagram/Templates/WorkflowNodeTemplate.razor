@namespace Synapse.Dashboard
@inherits NodeTemplate

<g class="node @(!string.IsNullOrWhiteSpace(Node.Shape) ? "shape-" + Node.Shape : "shape-rectangle") @Node.CssClass" transform="translate(@((Node.X).ToInvariantString()), @((Node.Y).ToInvariantString()))">
    <CascadingValue Name="Node" Value="Node">
        <NodeShapeTemplate />
        <CascadingValue Name="LabelTemplate" Value="LabelTemplate">
            <NodeLabelTemplate />
        </CascadingValue>
        <CascadingValue Name="Symbol" Value="WorkflowNode.Symbol">
            <NodeSymbolTemplate />
        </CascadingValue>
        <CascadingValue Name="ActiveInstances" Value="WorkflowNode.OperativeInstancesCount">
            <CascadingValue Name="FaultedInstances" Value="WorkflowNode.FaultedInstancesCount">
                    
            </CascadingValue>
        </CascadingValue>
        @if (Graph.EnableProfiling) {
            <circle cx="0" cy="0" r="1" fill="red" />
        }
    </CascadingValue>
</g>

    
@code {
    protected virtual IWorkflowNodeViewModel WorkflowNode => (IWorkflowNodeViewModel)this.Node;
    BoundingBox bounds => Node.Bounds!;

    RenderFragment? LabelTemplate => !string.IsNullOrWhiteSpace(WorkflowNode.Type) || !string.IsNullOrWhiteSpace(WorkflowNode.Content) ? (__builder) =>
    {
        <g class="label">
            <foreignObject x="@(bounds.X.ToInvariantString())"
                           y="@(bounds.Y.ToInvariantString())"
                           width="@(bounds.Width.ToInvariantString())"
                           height="@(bounds.Height.ToInvariantString())">
                <div title="@Node.Label" class="label-content">
                    <h3>
                        @if (!string.IsNullOrWhiteSpace(Node.Label))
                        {
                            @Node.Label
                        }
                    </h3>
                    @if (!string.IsNullOrWhiteSpace(WorkflowNode.Type)) {
                        <p class="fw-bold">@WorkflowNode.Type</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(WorkflowNode.Content))
                    {
                        <pre class="fw-light fst-italic">@WorkflowNode.Content</pre>
                    }
                </div>
            </foreignObject>
        </g>
    } : null;
}