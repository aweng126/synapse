@page "/correlators"
@attribute [Authorize]
@namespace Synapse.Dashboard.Pages.Correlators.List
@inherits NamespacedResourceManagementComponent<Correlator>
@inject IBreadcrumbManager BreadcrumbManager

<ApplicationTitle>Correlators</ApplicationTitle>

<div class="table-container">
    @if (Loading)
    {
        <Loader />
    }
    <div class="d-flex flex-row justify-content-between align-items-center">
        <h4>Correlators</h4>
        <span>@(Resources?.Count ?? 0) items</span>
        <div class="d-flex">
            <select class="form-select m-2" @onchange="OnNamespaceChanged">
                <option value="">All namespaces</option>
                @if (Namespaces != null && Namespaces.Count > 0)
                {
                    foreach (var namespaceResource in Namespaces)
                    {
                        <option value="@namespaceResource.GetName()" selected="@(@namespaceResource.GetName() == @namespace)">@namespaceResource.GetName()</option>
                    }
                }
            </select>
            <input type="search" class="form-control rounded my-2 me-2" placeholder="Search" value="@SearchTerm" @oninput="OnSearchInput" />
        </div>
    </div>
    <table class="table table-hover">
        <thead>
            <tr>
                <th class="sticky-header text-start">Namespace</th>
                <th class="sticky-header text-start">Name</th>
                <th class="sticky-header text-center">Creation Time</th>
                <th class="sticky-header text-center">Status</th>
                <th class="sticky-header text-end"></th>
            </tr>
        </thead>
        <tbody>
            @if (Resources != null && Resources.Any())
            {
                <Virtualize Context="resource" Items="@Resources">
                    <tr @onclick="async _ => await OnShowResourceDetailsAsync(resource)" class="cursor-pointer">
                        <td class="text-start">@resource.Metadata.Namespace</td>
                        <td class="text-start">@resource.Metadata.Name</td>
                        <td class="text-center">@resource.Metadata.CreationTimestamp?.DateTime.RelativeFormat()</td>
                        <td class="text-center"><span class="badge rounded-pill border border-@resource.Status?.Phase.GetColorClass() text-@resource.Status?.Phase.GetColorClass()">@resource.Status?.Phase</span></td>
                        <td class="text-end">
                            <button class="btn btn-sm btn-dark" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false" title="" @onclick:stopPropagation="true"><i class="bi bi-three-dots-vertical"></i></button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#" @onclick="async _ => await OnShowResourceEditorAsync(resource)" @onclick:preventDefault="true" @onclick:stopPropagation="true"><Icon Name="IconName.Pencil" /> Edit</a></li>
                                <li><a class="dropdown-item text-danger" href="#" @onclick="async _ => await OnDeleteResourceAsync(resource)" @onclick:preventDefault="true" @onclick:stopPropagation="true"><Icon Name="IconName.Trash" /> Delete</a></li>
                            </ul>
                        </td>
                    </tr>
                </Virtualize>
            }
        </tbody>
    </table>
</div>

<Button Outline="true" Color="ButtonColor.Primary" @onclick="async _ => await OnShowResourceEditorAsync()"><Icon Name="IconName.Plus" /></Button>

<Offcanvas @ref="DetailsOffCanvas" Size="OffcanvasSize.Large" UseStaticBackdrop="false" BodyCssClass="d-flex flex-column" />

<Offcanvas @ref="EditorOffCanvas" Size="OffcanvasSize.Large" UseStaticBackdrop="false" BodyCssClass="d-flex flex-column" />

<ConfirmDialog @ref="Dialog" />

@code {
    /// <inheritdoc/>
    protected override void OnInitialized()
    {
        base.OnInitialized();
        BreadcrumbManager.Use(Breadcrumbs.Correlators);
    }
}